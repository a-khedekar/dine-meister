{"version":3,"sources":["Components/Recipes.js","Components/Recipegrid.js","Components/Maincontainer.js","Components/RecipePage.js","App.js","reportWebVitals.js","index.js"],"names":["Recipes","props","history","useHistory","className","src","eachRecipe","image","alt","title","onClick","fetch","id","apiKey","then","data","json","console","log","push","pathname","state","Recipegrid","useState","recipeArray","setRecipeArray","pantryList","length","ingredients","map","eachitem","name","join","index","Maincontainer","setPantryList","selectedValue","setSelectedValue","deletePantryIngredients","e","target","splice","style","textAlign","fontWeight","paddingTop","placeholder","value","getOptionLabel","getOptionValue","loadOptions","inputValue","onChange","tempArray","undefined","find","message","warning","fontSize","display","justifyContent","color","pantryItem","textTransform","padding","float","RecipePage","location","paddingLeft","paddingRight","readyInMinutes","servings","extendedIngredients","ingredient","original","step","dangerouslySetInnerHTML","__html","summary","analyzedInstructions","steps","instruction","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82dae1f3.chunk.js","sourcesContent":["import \"../App.css\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Recipes(props) {\n    let history = useHistory();\n    function callRecipePageApi() {\n        const result = fetch(`https://api.spoonacular.com/recipes/informationBulk?ids=${props.eachRecipe.id}&apiKey=${props.apiKey}`)\n            .then(data => data.json())\n            .then(data => {\n                console.log(\"receipepageapidata\", data)\n                // setRecipeArray(data);\n                history.push({\n                    pathname: `/recipepage`,\n                    state: data\n                })\n\n            });\n    }\n\n    return (\n        <div className=\"card\">\n            <div className=\"card__body\">\n                <img src={props.eachRecipe.image} alt=\"\" className=\"card__image\" />\n                <h2 className=\"card__title\"> {props.eachRecipe.title}</h2>\n                <p className=\"card__description\"></p>\n            </div>\n            <button className=\"card__btn\" onClick={callRecipePageApi}>View Recipe</button>\n        </div>\n    )\n}\n\nexport default Recipes;","import React, { useState } from \"react\"\nimport Recipes from \"./Recipes\";\nimport '../App.css'\n\nfunction Recipegrid(props) {\n\n    const [recipeArray, setRecipeArray] = useState([])\n\n\n    const getReceipe = () => {\n        let ingredients = \"\";\n        ingredients = props.pantryList.map((eachitem) => {\n            return eachitem.name\n        }).join(\",+\")\n        console.log(\"ingredients\", ingredients)\n        const result = fetch(`https://api.spoonacular.com/recipes/findByIngredients?ingredients=${ingredients}&number=24&ranking=2&apiKey=${props.apiKey}`)\n            .then(data => data.json())\n            .then(data => {\n                console.log(\"receipeapidata\", data)\n                setRecipeArray(data);\n\n            });\n\n    }\n\n    return (\n        <div>\n            {props.pantryList.length > 0 && <div><button className=\"searchButton\" onClick={getReceipe}> Fetch Recipes</button></div>}\n\n            <div className=\"cardContainer\">\n                {recipeArray.length > 0 && recipeArray.map(\n                    function (eachRecipe, index) {\n                        return (\n\n                            <Recipes apiKey={props.apiKey} eachRecipe={eachRecipe} key={index} />\n\n\n                        )\n                    }\n                )}\n            </div>\n        </div >\n    )\n\n}\nexport default Recipegrid;","import React, { useState } from \"react\"\nimport AsyncSelect from 'react-select/async'\nimport '../App.css'\nimport { message } from \"antd\"\nimport \"antd/dist/antd.css\";\nimport Recipegrid from \"./Recipegrid\"\n\nfunction Maincontainer(props) {\n    const [pantryList, setPantryList] = useState([])\n    const [selectedValue, setSelectedValue] = useState({})\n\n    const handleChange = value => {\n        console.log(\"handlechange\", value)\n        setSelectedValue(value)\n        let tempArray = pantryList;\n        let doesExist = tempArray.find(e => e.name === value.name)\n        // doesExist === undefined ? tempArray.push(value) : error message\n        if (doesExist === undefined) {\n            tempArray.push(value)\n        }\n        else {\n            message.warning('You have this ingredient in your pantry already!', 3);\n        }\n\n        setSelectedValue({})\n        setPantryList(tempArray)\n    }\n\n    const deletePantryIngredients = (e) => {\n        console.log(\"index\", e.target.id)\n        pantryList.length > 0 && pantryList.splice(e.target.id, 1)\n        setPantryList([...pantryList])\n    }\n\n\n    const loadOptions = (inputValue) => {\n        const result = fetch(`https://api.spoonacular.com/food/ingredients/autocomplete?query=${inputValue}&number=10&apiKey=${props.apiKey}`)\n            .then(data => data.json())\n            .then(data => {\n                return data;\n            });\n        return result;\n    }\n\n    return (\n        <div >\n            <h1 style={{ textAlign: \"center\", fontWeight: \"bold\", paddingTop: \"10px\" }}>Welcome to DineMeister, my fellow Chef!</h1>\n            <p className=\"forAsyncLabel\">Type in your favorite ingredients below to fill your pantry, then click 'Fetch Recipes' to see what you can make!</p>\n            <div className=\"forAsyncSelect\" >\n                <label>\n                    <AsyncSelect\n                        placeholder={\"\"}\n                        value={selectedValue}\n                        getOptionLabel={e => e.name}\n                        getOptionValue={e => e.name}\n                        loadOptions={loadOptions}\n                        onChange={handleChange}\n                    />\n                </label>\n            </div>\n\n            <div style={{ fontSize: \"30px\", display: \"flex\", justifyContent: \"center\", color: \"#fff\" }}>\n                {pantryList.length > 0 && <span> Your Pantry</span>}\n            </div>\n            <div className=\"gallery\">\n                {pantryList.length > 0 && pantryList.map(\n                    function (pantryItem, index) {\n                        return (\n                            <div className=\"gallery-item\" key={index}>\n                                <span style={{ fontSize: \"20px\", textTransform: \"capitalize\", padding: \"5px\" }}>\n                                    {pantryItem.name}\n                                </span>\n                                <i id={index} onClick={deletePantryIngredients} className=\"fa fa-trash-o\" style={{ fontSize: \"20px\", color: \"red\", float: \"right\", padding: \"10px\", }}></i>\n                                <img className=\"gallery-image\" src={`https://spoonacular.com/cdn/ingredients_250x250/${pantryItem.image}`} alt=\"an api-provided img for this ingredient\" />\n                            </div>\n                        )\n                    }\n                )}\n            </div>\n\n            <Recipegrid pantryList={pantryList} apiKey={props.apiKey} />\n\n\n        </div>\n\n    )\n\n}\nexport default Maincontainer;","import { useHistory } from \"react-router-dom\";\n\nfunction RecipePage() {\n    let history = useHistory();\n    console.log('history', history)\n    const { location } = history;\n    const { state } = location;\n\n    return (\n        <div className=\"mainBox\">\n            <div style={{ fontSize: \"30px\", paddingLeft: \"20px\", display: \"flex\", justifyContent: \"space-between\" }}>\n                <span>{state[0].title}</span>\n                <span style={{ display: \"flex\", justifyContent: \"space-between\" }}  >\n                    <span style={{ paddingRight: \"60px\", fontSize: \"22px\" }}>Ready in {state[0].readyInMinutes} min</span>\n                    <span style={{ paddingRight: \"73px\", fontSize: \"22px\" }}> Serves: {state[0].servings}</span>\n                </span>\n            </div>\n            <div className=\"imgIngredients\">\n\n                <div className=\"forIngredients\">\n                    <h2 style={{ paddingLeft: \"20px\" }}>Ingredients</h2>\n                    <ul>\n\n                        {state[0].extendedIngredients.length > 0 && state[0].extendedIngredients.map(\n                            function (ingredient, index) {\n                                return (\n                                    <li>\n                                        {ingredient.name + \"  (\" + ingredient.original + \")\"}\n                                    </li>\n                                )\n                            }\n                        )}\n\n                    </ul>\n                    <span>\n                        {state[0].step}\n                    </span>\n\n                </div>\n\n                <div> <img className=\"forRecipeImg\" src={state[0].image} alt=\"recipe Image\">\n                </img>\n\n                </div>\n            </div>\n\n            <div className=\"showSummary\">\n                <div>\n                    <h2>Summary</h2>\n                    <p dangerouslySetInnerHTML={{ __html: state[0].summary }}></p>\n                </div>\n\n            </div>\n\n            <div className=\"showInstructions\">\n                <div>\n                    {state[0].analyzedInstructions.length > 0 ? <h2>Instructions</h2> : <h2>Sorry no instructions found</h2>}\n\n                    {state[0].analyzedInstructions.length > 0 && state[0].analyzedInstructions[0].steps.length > 0 && state[0].analyzedInstructions[0].steps.map(\n                        function (instruction, index) {\n                            return (\n\n                                <li>\n                                    {instruction.step}\n                                </li>\n                            )\n                        }\n                    )}\n\n\n                </div>\n\n            </div>\n\n\n\n        </div>\n    )\n\n}\n\n\n\n\n\n\nexport default RecipePage;","import React from \"react\"\nimport Maincontainer from \"./Components/Maincontainer\";\nimport { Switch, Route } from \"react-router-dom\";\nimport RecipePage from \"./Components/RecipePage\"\n\nfunction App() {\n  const apiKey = \"f9ec686028f346bfb6673ac6c0544f49\"\n  return (\n    <div className=\"\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Maincontainer apiKey={apiKey} />\n        </Route>\n        <Route path=\"/recipepage\">\n          <RecipePage />\n        </Route>\n      </Switch>\n    </div>\n  )\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}